{"ast":null,"code":"var _jsxFileName = \"/Users/chelseacrooke/Documents/HW/chelsea4crooke.github.io/ClickGame/src/App.js\";\nimport React, { Component } from \"react\";\nimport Board from \"./components/Board/indexBoard\";\nimport Card from \"./components/Card\";\nimport Score from \"./components/Score/Score\";\nimport turtles from \"./turtles.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      turtles,\n      TurtleIds: [],\n      score: 0,\n      goal: 12,\n      status: \"\"\n    };\n\n    this.shuffScore = id => {\n      let TurtleIds = this.state.TurtleIds;\n\n      if (TurtleIds.includes(id)) {\n        this.setState({\n          TurtleIds: [],\n          score: 0,\n          status: \"Game Over! You lost. Click to play again!\"\n        });\n        return;\n      } else {\n        TurtleIds.push(id);\n\n        if (TurtleIds.length === 8) {\n          this.setState({\n            score: 12,\n            status: \"Smartie pants! What a good memory!! Click to play again!\",\n            TurtleIds: []\n          });\n          return;\n        }\n\n        this.setState({\n          turtles,\n          TurtleIds,\n          score: TurtleIds.length,\n          status: \" \"\n        });\n\n        for (let i = turtles.length - 1; i > 0; i++) {\n          let j = Math.floor(Math.random() * (i + 1));\n          var _ref = [turtles[j], turtles[i]];\n          turtles[i] = _ref[0];\n          turtles[j] = _ref[1];\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Start Clicking\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Do you remember the one you clicked before?\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" Don't click the same image twice, or else!\"), React.createElement(\"div\", {\n      className: \"scores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Score, {\n      total: this.state.score,\n      goal: 12,\n      status: this.state.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.turtles.map(turtles => React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"shuffCard=\", this.shuffCard, \"id=\", turtles.id, \"key=\", turtles.id, \"image=\", turtles.image))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chelseacrooke/Documents/HW/chelsea4crooke.github.io/ClickGame/src/App.js"],"names":["React","Component","Board","Card","Score","turtles","App","state","TurtleIds","score","goal","status","shuffScore","id","includes","setState","push","length","i","j","Math","floor","random","render","map","shuffCard","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Board from \"./components/Board/indexBoard\";\nimport Card from \"./components/Card\";\nimport Score from \"./components/Score/Score\";\nimport turtles from \"./turtles.json\";\nimport \"./App.css\";\n  \nclass App extends Component {\n  \n    // Setting this.state turtle to the cards json array\n    state = {\n     turtles,\n      TurtleIds: [],\n      score: 0,\n      goal: 12,\n      status: \"\"\n    };\n    shuffScore = id => {\n      let TurtleIds = this.state.TurtleIds;\n\n      if(TurtleIds.includes(id)){\n        this.setState({ TurtleIds: [], score: 0, status:  \"Game Over! You lost. Click to play again!\" });\n        return;\n      }else{\n        TurtleIds.push(id)\n  \n        if(TurtleIds.length === 8){\n          this.setState({score: 12, status: \"Smartie pants! What a good memory!! Click to play again!\", TurtleIds: []});\n          return;\n        }\n  \n        this.setState({ turtles, TurtleIds, score: TurtleIds.length, status: \" \" });\n  \n        for (let i = turtles.length - 1; i > 0; i++) {\n          let j = Math.floor(Math.random() * (i + 1));\n           [turtles[i], turtles[j]] =  [turtles[j], turtles[i]];\n        }\n      }\n    }\n  render(){\n    return(\n      <div className= \"App\">\n        <h1>Start Clicking</h1>\n        <h2>Do you remember the one you clicked before?</h2>\n        <h3> Don't click the same image twice, or else!</h3>\n        <div className=\"scores\">\n          <Score total={this.state.score}\n          goal={12}\n          status={this.state.status}/>\n          </div>\n          <Board>\n            {this.state.turtles.map(turtles => (\n         \n            <Card>\n               shuffCard={this.shuffCard}\n                id={turtles.id}\n                 key={turtles.id}\n                image={turtles.image}\n            </Card>\n            ))}\n          </Board>\n        </div>  \n    )}\n  }\nexport default App;"]},"metadata":{},"sourceType":"module"}