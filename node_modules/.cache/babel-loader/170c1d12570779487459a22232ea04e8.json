{"ast":null,"code":"var _jsxFileName = \"/Users/chelseacrooke/Documents/HW/chelsea4crooke.github.io/clickyGame/src/App.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\nimport kittens from \"./cards.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      kittens,\n      clickedKittenIds: [],\n      score: 0,\n      goal: 8,\n      status: \"\"\n    };\n\n    this.shuffleScoreCard = id => {\n      let clickedKittenIds = this.state.clickedKittenIds;\n\n      if (clickedKittenIds.includes(id)) {\n        this.setState({\n          clickedKittenIds: [],\n          score: 0,\n          status: \"Game Over! You lost. Click to play again!\"\n        });\n        return;\n      } else {\n        clickedKittenIds.push(id);\n\n        if (clickedKittenIds.length === 8) {\n          this.setState({\n            score: 8,\n            status: \"You Won! Great Job, Smartie! Click to play again!\",\n            clickedKittenIds: []\n          });\n          console.log('You Win');\n          return;\n        }\n\n        this.setState({\n          kittens,\n          clickedKittenIds,\n          score: clickedKittenIds.length,\n          status: \" \"\n        });\n\n        for (let i = kittens.length - 1; i > 0; i--) {\n          let j = Math.floor(Math.random() * (i + 1));\n          var _ref = [kittens[j], kittens[i]];\n          kittens[i] = _ref[0];\n          kittens[j] = _ref[1];\n        }\n      }\n    };\n  }\n\n  // Map over this.state.cards and render a Card component for each card object\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"App-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"The Click\"), React.createElement(\"p\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Try not to click the same image twice!\")), React.createElement(Score, {\n      total: this.state.score,\n      goal: 8,\n      status: this.state.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.kittens.map(kitten => React.createElement(Card, {\n      shuffleScoreCard: this.shuffleScoreCard,\n      id: kitten.id,\n      key: kitten.id,\n      image: kitten.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Designed and built by Miranda Jaroneski. You can find the code\", React.createElement(\"a\", {\n      href: \"https://github.com/MJJaroneski/clickyGame\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" here\"), \".\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chelseacrooke/Documents/HW/chelsea4crooke.github.io/clickyGame/src/App.js"],"names":["React","Component","Card","Wrapper","Score","kittens","App","state","clickedKittenIds","score","goal","status","shuffleScoreCard","id","includes","setState","push","length","console","log","i","j","Math","floor","random","render","map","kitten","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\nimport kittens from \"./cards.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state kittens to the cards json array\n  state = {\n   kittens,\n    clickedKittenIds: [],\n    score: 0,\n    goal: 8,\n    status: \"\"\n  };\n\n  //shuffle the kitten cards in the browser when clicked\n  shuffleScoreCard = id => {\n    let clickedKittenIds = this.state.clickedKittenIds;\n\n    if(clickedKittenIds.includes(id)){\n      this.setState({ clickedKittenIds: [], score: 0, status:  \"Game Over! You lost. Click to play again!\" });\n      return;\n    }else{\n      clickedKittenIds.push(id)\n\n      if(clickedKittenIds.length === 8){\n        this.setState({score: 8, status: \"You Won! Great Job, Smartie! Click to play again!\", clickedKittenIds: []});\n        console.log('You Win');\n        return;\n      }\n\n      this.setState({ kittens, clickedKittenIds, score: clickedKittenIds.length, status: \" \" });\n\n      for (let i = kittens.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n         [kittens[i], kittens[j]] =  [kittens[j], kittens[i]];\n      }\n    }\n  }\n\n  // Map over this.state.cards and render a Card component for each card object\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">The Click</h1>\n          <p className=\"App-intro\">\n            Try not to click the same image twice!\n          </p>\n        </header>\n        <Score total={this.state.score}\n               goal={8}\n               status={this.state.status}\n               />\n        <Wrapper>\n          {this.state.kittens.map(kitten => (\n            <Card\n              shuffleScoreCard={this.shuffleScoreCard}\n              id={kitten.id}\n              key={kitten.id}\n              image={kitten.image}\n            />\n          ))}\n        </Wrapper>\n        <footer>\n          <p>Designed and built by Miranda Jaroneski. You can find the\n          code<a href=\"https://github.com/MJJaroneski/clickyGame\" target=\"_blank\" rel=\"noopener noreferrer\"> here</a>.</p>\n        </footer>\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}